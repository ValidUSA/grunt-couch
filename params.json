{"name":"grunt-couch","tagline":"Build and publish Couchapps and CouchDB design documents with grunt. Simple.","body":"# grunt-couch [![Build Status](https://secure.travis-ci.org/jo/grunt-couch.png?branch=master)](http://travis-ci.org/jo/grunt-couch)\r\n\r\nCompile CouchDB design documents from Couchapp like directory tree.\r\n\r\n\r\n## Getting Started\r\n\r\nThis plugin requires Grunt `~0.4.1`\r\n\r\nIf you haven't used [Grunt](http://gruntjs.com/) before,\r\nbe sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide,\r\nas it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins.\r\nOnce you're familiar with that process, you may install this plugin with this command:\r\n\r\n```shell\r\nnpm install grunt-couch --save-dev\r\n```\r\n\r\nOnce the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\r\n\r\n```js\r\ngrunt.loadNpmTasks('grunt-couch');\r\n```\r\n\r\n## The \"couch-compile\" task\r\n\r\n### Overview\r\n\r\nIn your project's Gruntfile, add a section named `couch-compile` to the data object passed into `grunt.initConfig()`.\r\n\r\n```js\r\ngrunt.initConfig({\r\n  'couch-compile': {\r\n    app: {\r\n      files: {\r\n        'tmp/app.json': 'couch/*'\r\n      }\r\n    }\r\n  }\r\n})\r\n```\r\n\r\nThis will load the directory tree from `app` and creates an `app.json` JSON file.\r\n\r\nSee [Configuring tasks: Files](http://gruntjs.com/configuring-tasks#files) for more information\r\nabout possible source and target configurations.\r\n\r\n### Options\r\n\r\n#### options.merge\r\n\r\nYour can specify a directory which will be merged into all docs.\r\nThis is useful to provide defaults like templates and libs which are used in all ddocs.\r\n\r\nEg:\r\n\r\n```js\r\ngrunt.initConfig({\r\n  'couch-compile': {\r\n    app: {\r\n      config: {\r\n        merge: 'couch/shared'\r\n      },\r\n      files: {\r\n        'tmp/app.json': 'couch/*'\r\n      }\r\n    }\r\n  }\r\n})\r\n```\r\n\r\n\r\n### The Couch Directory Tree\r\n\r\nis quiet self-explanatory. For example:\r\n\r\n```shell\r\napp\r\n├── _attachments\r\n│   ├── a\r\n│   │   └── nested\r\n│   │       └── file.txt\r\n│   └── index.html\r\n├── _id\r\n├── language\r\n├── lists\r\n│   └── docs.js\r\n├── rewrites.json\r\n├── shows\r\n│   ├── doc.js\r\n│   └── hello.js\r\n├── validate_doc_update.js\r\n└── views\r\n    ├── names\r\n    │   └── map.js\r\n    └── numbers\r\n        ├── map.js\r\n        └── reduce\r\n```\r\n\r\n`grunt-couch` uses the same filesystem mapping like [Couchapp python tool](http://couchapp.org/page/couchapp-python)\r\nand [Erika](https://github.com/benoitc/erica):\r\n\r\n[The Couchapp Filesystem Mapping](http://couchapp.org/page/filesystem-mapping).\r\n\r\nFor the property name the file extension will be stripped:\r\n\r\n```js\r\n{\r\n  \"validate_doc_update\": \"content of validate_doc_update.js\",\r\n}\r\n```\r\n\r\nFiles inside the `\\_attachments` directory are handled special:\r\nThey become attachment entries of the form\r\n\r\n```js\r\n{\r\n  \"a/nested/file.txt\": {\r\n    \"data\": \"SGVsbG8gV29ybGQhCg==\",\r\n    \"content_type\": \"text/plain\"\r\n  }\r\n}\r\n```\r\n\r\nThe `content\\_type` is quessed using [mime](https://github.com/broofa/node-mime).\r\n`data` is the base64 encoded value of the file.\r\n\r\nRead more about the so called [Inline Attachments](http://wiki.apache.org/couchdb/HTTP_Document_API#Inline_Attachments).\r\n\r\n### Output JSON\r\n\r\nThe output JSON follows the [Bulk Document API](http://wiki.apache.org/couchdb/HTTP_Bulk_Document_API):\r\n\r\n```js\r\n{\r\n  \"docs\": [\r\n    { \"_id\": \"adoc\" },\r\n    { \"_id\": \"anotherdoc\" }\r\n  ]\r\n}\r\n```\r\n\r\n## The \"couch-push\" task\r\n\r\nWith the `couch-push` task you deploy your documents to CouchDB.\r\n\r\nThe database is created if not already present.\r\n\r\n### Overview\r\n\r\nIn your project's Gruntfile, add a section named `couch-push` to the data object passed into `grunt.initConfig()`.\r\n\r\n```js\r\ngrunt.initConfig({\r\n  'couch-push': {\r\n    options: {\r\n      user: 'karin',\r\n      pass: 'secure'\r\n    },\r\n    localhost: {\r\n      files: {\r\n        'http://localhost:5984/myapp': 'app.json'\r\n      }\r\n    }\r\n  }\r\n})\r\n```\r\n\r\n### Options\r\n\r\nYou may also pass in all the options as command line arguments\r\nand avoid storing the auth credentials in your gruntfile.\r\n\r\n#### options.user\r\n\r\nYour username.\r\n\r\n#### options.pass\r\n\r\nYour password.\r\n\r\n\r\n## The \"couch\" task\r\n\r\nThis is an [Alias task](http://www.google.com/intl/de/landing/nose/help.html) for\r\n`couch-compile` and `couch-push`.\r\nIt first compiles and then pushs the documents.\r\n\r\n\r\n## The \"couch-configure\" task\r\n\r\nYou can write [CouchDB configuration](http://wiki.apache.org/couchdb/Complete_HTTP_API_Reference#configuration)\r\nfrom project files with `couch-configure`.\r\n\r\nThis comes in handy when you are using [Virtual Hosts](http://wiki.apache.org/couchdb/Virtual_Hosts)\r\nor when your app requires custom configuration options in order to work.\r\n\r\n### Overview\r\n\r\nIn your project's Gruntfile, add a section named `couch-configure` to the data object passed into `grunt.initConfig()`.\r\n\r\n```js\r\ngrunt.initConfig({\r\n  'couch-configure': {\r\n    options: {\r\n      user: 'karin',\r\n      pass: 'secure'\r\n    },\r\n    localhost: {\r\n      files: {\r\n        'http://localhost:5984': 'config'\r\n      }\r\n    }\r\n  }\r\n})\r\n```\r\n\r\nNow write your configuration options in plain files, eg:\r\n\r\n```shell\r\nconfig/\r\n└── vhosts\r\n    └── myapp.localhost\r\n```\r\n\r\n### Options\r\n\r\nYou may also pass in all the options as command line arguments\r\nand avoid storing the auth credentials in your gruntfile.\r\n\r\n#### options.user\r\n\r\nYour username.\r\n\r\n#### options.pass\r\n\r\nYour password.\r\n\r\n\r\n## Contributing\r\n\r\nIn lieu of a formal styleguide, take care to maintain the existing coding style.\r\nAdd unit tests for any new or changed functionality.\r\nLint and test your code using [Grunt](http://gruntjs.com/).\r\n\r\n\r\n## Release History\r\n\r\n * 01.04,2013   1.0.0   Rename `couch` to `couch-compile` and `push` to `couch-push`. New task: `couch-configure`\r\n * 31.03.2013   0.5.2   Introduce `merge` option\r\n * 14.03.2013   0.4.3   Create database if not exist, improved messages\r\n * 13.03.2013   0.4.0   Rename task `ddoc` to `couch`\r\n * 11.03.2013   0.3.0   Use different tasks for compilation (`ddoc`) and `push`\r\n * 20.02.2013   0.1.0   Initial Release\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}