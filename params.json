{"name":"grunt-couch","tagline":"Build and publish Couchapps and CouchDB design documents with grunt. Simple.","body":"grunt-couch [![Build Status](https://secure.travis-ci.org/jo/grunt-couch.png?branch=master)](http://travis-ci.org/jo/grunt-couch)\r\n===========\r\n\r\nCompile CouchDB design documents from Couchapp like directory tree.\r\n\r\n\r\nGetting Started\r\n---------------\r\n\r\nThis plugin requires Grunt `~0.4.0`\r\n\r\nIf you haven't used [Grunt](http://gruntjs.com/) before,\r\nbe sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide,\r\nas it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins.\r\nOnce you're familiar with that process, you may install this plugin with this command:\r\n\r\n```shell\r\nnpm install grunt-couch --save-dev\r\n```\r\n\r\nOnce the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\r\n\r\n```js\r\ngrunt.loadNpmTasks('grunt-couch');\r\n```\r\n\r\nThe \"couch\" task\r\n---------------\r\n\r\n### Overview\r\n\r\nIn your project's Gruntfile, add a section named `couch` to the data object passed into `grunt.initConfig()`.\r\n\r\n```js\r\ngrunt.initConfig({\r\n  couch: {\r\n    app: {\r\n      files: 'app.json': 'app'\r\n    }\r\n  }\r\n})\r\n```\r\n\r\nThis will load the directory tree from `app` and creates an `app.json` JSON file.\r\n\r\nSee [Configuring tasks: Files](http://gruntjs.com/configuring-tasks#files) for more information\r\nabout possible source and target configurations.\r\n\r\n### The Couch Directory Tree\r\n\r\nis quiet self-explanatory. For example:\r\n\r\n```shell\r\napp\r\n├── _attachments\r\n│   ├── a\r\n│   │   └── nested\r\n│   │       └── file.txt\r\n│   └── index.html\r\n├── _id\r\n├── language\r\n├── lists\r\n│   └── docs.js\r\n├── rewrites.json\r\n├── shows\r\n│   ├── doc.js\r\n│   └── hello.js\r\n├── validate_doc_update.js\r\n└── views\r\n    ├── names\r\n    │   └── map.js\r\n    └── numbers\r\n        ├── map.js\r\n        └── reduce\r\n```\r\n\r\n`grunt-couch` uses the same filesystem mapping like [Couchapp python tool](http://couchapp.org/page/couchapp-python)\r\nand [Erika](https://github.com/benoitc/erica):\r\n\r\n[The Couchapp Filesystem Mapping](http://couchapp.org/page/filesystem-mapping).\r\n\r\nFor the property name the file extension will be stripped:\r\n\r\n```js\r\n{\r\n  \"validate_doc_update\": \"content of validate_doc_update.js\",\r\n}\r\n```\r\n\r\nFiles inside the `\\_attachments` directory are handled special:\r\nThey become attachment entries of the form\r\n\r\n```js\r\n{\r\n  \"a/nested/file.txt\": {\r\n    \"data\": \"SGVsbG8gV29ybGQhCg==\",\r\n    \"content_type\": \"text/plain\"\r\n  }\r\n}\r\n```\r\n\r\nThe `content\\_type` is quessed using [mime](https://github.com/broofa/node-mime).\r\n`data` is the base64 encoded value of the file.\r\n\r\nRead more about the so called [Inline Attachments](http://wiki.apache.org/couchdb/HTTP_Document_API#Inline_Attachments).\r\n\r\n### Output JSON\r\n\r\nThe output JSON follows the [Bulk Document API](http://wiki.apache.org/couchdb/HTTP_Bulk_Document_API):\r\n\r\n```js\r\n{\r\n  \"docs\": [\r\n    { \"_id\": \"adoc\" },\r\n    { \"_id\": \"anotherdoc\" }\r\n  ]\r\n}\r\n```\r\n\r\nThe \"push\" task\r\n---------------\r\n\r\nWith the `push` task you deploy your documents to CouchDB.\r\n\r\nThe database is created if not already present.\r\n\r\n### Overview\r\n\r\nIn your project's Gruntfile, add a section named `push` to the data object passed into `grunt.initConfig()`.\r\n\r\n```js\r\ngrunt.initConfig({\r\n  push: {\r\n    options: {\r\n      user: 'karin',\r\n      pass: 'secure'\r\n    },\r\n    app: {\r\n      files: 'http://localhost:5984/myapp': 'app.json'\r\n    }\r\n  }\r\n})\r\n```\r\n\r\n### Options\r\n\r\nYou may also pass in all the options as command line arguments\r\nand avoid storing the auth credentials in your gruntfile.\r\n\r\n#### options.user\r\n\r\nYour username.\r\n\r\n#### options.pass\r\n\r\nYour password.\r\n\r\n\r\nContributing\r\n------------\r\n\r\nIn lieu of a formal styleguide, take care to maintain the existing coding style.\r\nAdd unit tests for any new or changed functionality.\r\nLint and test your code using [Grunt](http://gruntjs.com/).\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}